version: '3.6'
services:
  event_service:
    command: sh -c "chmod +x entrypoint.sh && ./entrypoint.sh"
    volumes:
      - ./event_service:/usr/src/app/event_service
      - ./.event_service_data/vscode_server:/root/.vscode-server
    labels:
      caddy.address: api.localhost:80
    environment:
      - HOST=postgres
      - BYPASS_AUTH=${BYPASS_AUTH:-1}
      - PROFILE_QUERIES=${PROFILE_QUERIES:-1}
      - IN2IT_API_URL=${IN2IT_API_URL:-http://api.localhost}
    tty: true
  in2it_site:
    command: sh -c "chmod +x entrypoint.sh && ./entrypoint.sh"
    volumes:
      - ./in2it_site:/usr/src/app/in2it_site
      - ./.in2it_site/vscode_server:/root/.vscode-server
    environment:
      - IN2IT_API_URL=${IN2IT_API_URL:-http://api.localhost}
      - BYPASS_AUTH=${BYPASS_AUTH:-1}
    labels:
      caddy.address: localhost:80
  caddy:
    environment:
      - 'AUTO_HTTPS=auto_https off'
  postgres:
    image: postgres:12.5-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    networks:
      - in2it
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "log_error_verbosity=TERSE" # https://www.postgresql.org/docs/12/runtime-config-logging.html#RUNTIME-CONFIG-LOGGING-WHAT
  ndscheduler:
    command: sh -c "chmod +x entrypoint.sh && nodemon --exec ./entrypoint.sh"
    volumes:
      - ../ndscheduler:/usr/src/app/ndscheduler
      - ndscheduler_modules:/usr/src/app/ndscheduler/node_modules/
      - ../.ndscheduler_data/vscode_remote:/root/vscode-remote
    environment:
      - DEBUG=${SCHEDULER_DEBUG}
      - HOSTNAME=postgres
  pgadmin:
    image: dpage/pgadmin4:4.29
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
      - PGADMIN_LISTEN_PORT=7000
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - '7000:7000'
    # pgadmin spams logs with http request notifications
    logging:
      driver: none
    networks:
      - in2it
  portainer:
    image: 'portainer/portainer:1.24.1'
    ports:
      - '9000:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - in2it
volumes:
  ndscheduler_modules:
  postgres_data:
  # event_processor_data:
  # event_processor_lock:
  # event_processor_scrapy:
  portainer_data:
  pgadmin_data:
